openapi: 3.0.0
info:
  version: 0.0.2
  title: ANM4L API
  description: ''
paths:


#####################################
##            ANALYSIS            ##
#####################################

  /analysis:
    get:
      tags:
        - Static Analysis
      summary: Get all network models
      operationId: dpsimadapter.get_all_analysis
      responses:
        '200':
          description: OK
          content:
              # schema:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnalysisResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - Static Analysis
      summary: Add a new analysis
      operationId: dpsimadapter.add_analysis
      requestBody:
        description: Analysis model to be added
        required: true
        content:
          multipart/form-data:
            example:
              name: "theAnalysis"
              type: "PowerflowAnalysis"
              modelid: 1
            schema:
              type: object
              required:
                - name
                - type
                - modelid
              properties:
                name:
                  description: Name of analysis case
                  type: string
                type:
                  description: Type of analysis, e.g. PowerflowAnalysis
                  type: string
                modelid:
                  description: Model to consider for analysis
                  type: integer
                csv_data:
                  description: Zip file of load profile data
                  type: string
                  format: binary


      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /analysis/{id}/results:
    get:
      tags:
        - Static Analysis
      summary: Get specific analysis results
      operationId: dpsimadapter.get_analysis_results
      parameters:
        - name: id
          description: Analysis id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                description: Archive containing result and log files, e.g. CSV
                type: string
                format: binary
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /analysis/{id}/logs:
    get:
      tags:
        - Static Analysis
      summary: Get specific analysis logs
      operationId: dpsimadapter.get_analysis_logs
      parameters:
        - name: id
          description: Analysis id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                description: Archive containing result and log files, e.g. CSV
                type: string
                format: binary
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /analysis/debug:
    get:
      tags:
        - Static Analysis
      summary: Get specific analysis logs
      operationId: dpsimadapter.get_debug_logs
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                description: Archive containing result and log files, e.g. CSV
                type: string
                format: binary
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /analysis/{id}:
    get:
      tags:
        - Static Analysis
      summary: Get specific analysis status
      operationId: dpsimadapter.get_analysis
      parameters:
        - name: id
          description: Analysis id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - Static Analysis
      summary: Delete specific analysis including results
      operationId: dpsimadapter.delete_analysis
      parameters:
        - name: id
          description: Analysis id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Model:
      type: object
      description: Properties of a simulation model
      properties:
        name:
          type: string
          description: Name of simulation model
        profiles:
          description: List of cgmes profiles in the model
          type: array
          items:
            $ref: '#/components/schemas/CGMES_Profile'
        version:
          # TODO: Discuss this
          description: cgmes version string. Example "cgmes_v2_4_15"
          type: string
          pattern: '^cgmes_v\d+_\d+(_\d+){0,1}$'

    ModelReply:
      allOf:
        - type: object
          required:
            - id
            - name
            - profiles
            - version
          properties:
            id:
              type: integer
              description: Handle to the model
        - $ref: '#/components/schemas/Model'

    ModelElement:
      type: object
      properties:
        id:
          type: integer
        uuid:
          description: CIM UUID of model element
          type: string
        name:
          description: Name of model element
          type: string
        type:
          description: CIM type of model element
          type: string

    ModelElementAttributes:
      type: object
      properties:
        id:
          type: integer
        uuid:
          description: CIM UUID of model element
          type: string
        name:
          description: Name of model element
          type: string
        type:
          description: CIM type of model element
          type: string
        attributes:
          description: Element attributes, e.g. strings and numbers
          type: object

    NewModelElement:
      type: object
      required:
        - name
        - type
      properties:
        name:
          description: Name of model element
          type: string
        type:
          description: CIM type of model element
          type: string
        param:
          description: Element attributes, e.g. strings and numbers
          type: object

    ModelElementUpdate:
      type: object
      properties:
        name:
          description: Name of model element
          type: string
        type:
          description: CIM type of model element
          type: string
        param:
          description: Element attributes, e.g. strings and numbers
          type: object

    Analysis:
      type: object
      required:
        - name
        - type
        - modelid
      properties:
        name:
          description: Name of analysis case
          type: string
        type:
          description: Type of analysis, e.g. PowerflowAnalysis
          type: string
        modelid:
          description: Model to consider for analysis
          type: integer
      discriminator:
        propertyName: type

    AnalysisResponse:
      oneOf:
        - $ref: '#/components/schemas/PowerflowAnalysis'
        - $ref: '#/components/schemas/OutageAnalysis'
      properties:
        id:
          type: integer
        status:
          description: Indicate if analysis is completed or not
          # TODO change to better type (Bool/Enum (Pending/Running/Completed))
          type: string

    PowerflowAnalysis:
      allOf:
        - type: object
          properties:
            param:
              description: >-
                attribute map, e.g. strings and numbers to define solver
                settings etc.
              type: object
              additionalProperties: {}

    OutageAnalysis:
      allOf:
      - type: object
        required:
          - nm1List
        properties:
          nm1List:
            description: List of N-1 components
            type: array
            items:
              type: string
          nm2List:
            description: List of N-2 components
            type: array
            items:
              type: string
          param:
            description: attribute map, e.g. strings and numbers
            type: object
            additionalProperties: {}


    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    CGMES_Profile:
      type: string
      enum:
        - EQ
        - SSH
        - TP
        - SV
        - DY
        - GL
        - DI
      description: >
        Profile names:
          * `DI` - DiagramLayout
          * `DY` - Dynamics
          * `EQ` - Equipment
          * `GL` - GeographicalLocation
          * `SV` - StateVariables
          * `SSH` - SteadyStateHypothesis
          * `TP` - Topology

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
      x-apikeyInfoFunc: cimadapter.apikey_auth

# Apply the apikey globally to all operations
# security:
  # - ApiKeyAuth: []     # use the same name as under securitySchemes

servers:
  - description: Example server
    url: https://example.org/
